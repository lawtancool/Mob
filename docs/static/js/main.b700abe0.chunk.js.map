{"version":3,"sources":["firebase.js","logo.png","Main.js","Lobby.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","Main","props","newLobbyRef","doc","collection","className","window","location","origin","id","to","src","logo","alt","Lobby","useState","name","setName","postalCode","setPostalCode","distance","setDistance","selectedDietOptions","setSelectedDietOptions","schedule","setSchedule","lobbyId","useParams","lobby_id","history","useHistory","onSubmit","event","preventDefault","userRef","setDoc","push","type","placeholder","value","onChange","e","target","isMulti","diet_prefs","i","length","handleDropdownChange","options","label","theme","borderRadius","colors","primary25","primary","selection","numDays","minTime","maxTime","hourlyChunks","handleScheduleChange","form","Map","center","setCenter","useEffect","navigator","geolocation","getCurrentPosition","showPosition","posError","alert","position","lat","coords","latitude","long","longitude","lng","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b700abe0.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdeAChS8AHur-H7FQwLAtUcEnaYlQXKlE\",\r\n  authDomain: \"mob-dubhacks21.firebaseapp.com\",\r\n  projectId: \"mob-dubhacks21\",\r\n  storageBucket: \"mob-dubhacks21.appspot.com\",\r\n  messagingSenderId: \"866694741309\",\r\n  appId: \"1:866694741309:web:96e08a5a384758ee609954\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();","export default __webpack_public_path__ + \"static/media/logo.62327631.png\";","import React from 'react';\r\nimport { Router, Switch, Route, Link, useHistory } from 'react-router-dom';\r\nimport { collection, doc, setDoc } from \"firebase/firestore\"; \r\n\r\nimport { db } from './firebase';\r\nimport { logDOM } from '@testing-library/react';\r\nimport logo from './logo.png';\r\n\r\nconst Main = (props) => {\r\n\r\n    // Add a new document with a generated id\r\n    const newLobbyRef = doc(collection(db, \"lobbies\"));\r\n    return (\r\n        <div className = \"main-page\">\r\n            <div className = \"mob\">\r\n                <title>Mob</title>\r\n                <h1>Mob</h1>\r\n            </div>\r\n            <h2>Make it easy to eat with friends!</h2>\r\n            <h2>Where are we mobbing tonight?</h2>\r\n            <p className = \"center-container\" className = \"url-container\" id = \"rounded-edge1\" >\r\n            {window.location.origin + \"/\" + newLobbyRef.id}\r\n            </p>\r\n            <br></br>\r\n            <div className = \"center-container\">\r\n                <button id = \"rounded-edge2\">copy</button>\r\n                <Link to={newLobbyRef.id}><button id = \"rounded-edge2\">let's mob!</button></Link>\r\n            </div>\r\n            <img className = \"center-container\" src = {logo} alt = \"Logo\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import { React, useState } from 'react';\r\nimport { Router, Switch, Route, Link, useHistory, useParams } from 'react-router-dom';\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport ScheduleSelector from 'react-schedule-selector';\r\n\r\nimport { db } from './firebase';\r\n\r\nconst Lobby = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [postalCode, setPostalCode] = useState(\"\");\r\n    const [distance, setDistance] = useState(\"\");\r\n    const [selectedDietOptions, setSelectedDietOptions] = useState([]);\r\n    const [schedule, setSchedule] = useState();\r\n\r\n    const params = useParams();\r\n    const lobbyId = params.lobby_id;\r\n    const dietOptions = [\r\n        { value: \"vegan\", label: \"Vegan\"},\r\n        { value: \"vegetarian\", label: \"Vegetarian\"},\r\n        { value: \"halal\", label: \"Halal\"},\r\n        { value: \"kosher\", label: \"Kosher\"},\r\n        { value: \"no-gluten\", label: \"Gluten-Free\"}\r\n    ]\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n    //   alert(name + \" \" + postalCode + \" \" + distance + \" \" + selectedDietOptions + \" \" + schedule)\r\n      const userRef = doc(db, \"lobbies\", lobbyId, \"users\", name);\r\n      setDoc(userRef, {\r\n        postalCode: postalCode,\r\n        distance: distance,\r\n        selectedDietOptions: selectedDietOptions,\r\n        schedule: schedule,\r\n      });\r\n      history.push('/' + lobbyId + \"/map\");\r\n    }\r\n\r\n    const handleDropdownChange = (event) => {\r\n        let diet_prefs = [];\r\n        for(let i = 0; i < event.length; i++) {\r\n            diet_prefs.push(event[i][\"value\"]);\r\n        }\r\n        setSelectedDietOptions(diet_prefs);\r\n    }\r\n\r\n    const handleScheduleChange = (event) => {\r\n        setSchedule(event);\r\n    }\r\n\r\n    return (\r\n        <div className='questions'>\r\n            <h1>Preferences</h1> \r\n            <form id=\"my-form\" onSubmit={handleSubmit}>\r\n                {/* <label id=\"rounded-tan\">Name:\r\n                <input \r\n                    type=\"text\" \r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                </label>\r\n                <label id=\"rounded-tan\">Postal Code:\r\n                <input \r\n                    type=\"text\" \r\n                    value={postalCode}\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                />\r\n                </label>\r\n                <label id=\"rounded-tan\">Distance:\r\n                <input \r\n                    type=\"number\" \r\n                    value={distance}\r\n                    onChange={(e) => setDistance(e.target.value)}\r\n                />\r\n                </label> */}\r\n                <input type=\"text\" id=\"rounded-tan\" name=\"name\" placeholder=\"Name\" value={name}\r\n                    onChange={(e) => setName(e.target.value)} /><br/>\r\n                <input type=\"number\" id = \"rounded-tan\" name=\"postalcode\" placeholder=\"Postal Code\" value={postalCode}\r\n                    onChange={(e) => setPostalCode(e.target.value)}/><br/>\r\n                <input type=\"text\" id=\"rounded-tan\" name=\"distance\" placeholder=\"Distance\" value={distance} \r\n                    onChange={(e) => setDistance(e.target.value)}/><br></br>\r\n                {/* <input type=\"submit\" /> */}\r\n            </form>\r\n            <div className=\"dietary\">\r\n                <div id = \"rounded-green\">\r\n                <h4>\r\n                    Dietary Preferences\r\n                </h4>\r\n                <CreatableSelect\r\n                    isMulti\r\n                    onChange={event => handleDropdownChange(event)}\r\n                    options={dietOptions}\r\n                    theme={(theme) => ({\r\n                        ...theme,\r\n                        borderRadius: 30,\r\n                        colors: {\r\n                          ...theme.colors,\r\n                          primary25: '#CFD992',\r\n                          primary: '#CFD992',\r\n                        },\r\n                      })}\r\n                />\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            <div className=\"time\">\r\n                <div id = \"rounded-red\">\r\n                <h4>\r\n                    Availability\r\n                </h4>\r\n                    <ScheduleSelector\r\n                        selection={schedule}\r\n                        numDays={5}\r\n                        minTime={8}\r\n                        maxTime={22}\r\n                        hourlyChunks={1}\r\n                        onChange={event => handleScheduleChange(event)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <button form='my-form' type=\"submit\">Next</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lobby;","import { React, useState, useEffect }from 'react';\r\nimport { Router, Switch, Route, Link, useHistory, useParams } from 'react-router-dom';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst Map = (props) => {\r\n\r\n    const params = useParams();\r\n    const lobbyId = params.lobby_id;\r\n    const [center, setCenter] = useState({}); \r\n    const zoom = 14;\r\n\r\n    const AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition, posError);\r\n        } else {\r\n            alert(\"Please enable location permission\");\r\n        }\r\n    });\r\n\r\n    const showPosition = (position) => {\r\n        let lat = position.coords.latitude;\r\n        let long = position.coords.longitude;\r\n\r\n        setCenter({lat: lat, lng: long});\r\n    }\r\n\r\n    const posError = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='insert_class_name_here'>\r\n            <div style={{ height: '100vh', width: '100%' }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: 'AIzaSyDdeAChS8AHur-H7FQwLAtUcEnaYlQXKlE' }}\r\n                    defaultCenter={{lat: 47.6, lng: -122.3}}\r\n                    center={center}\r\n                    defaultZoom={zoom}\r\n                >\r\n                {/* <AnyReactComponent\r\n                    lat={59.955413}\r\n                    lng={30.337844}\r\n                    text=\"My Marker\"\r\n                /> */}\r\n                </GoogleMapReact>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import Main from './Main';\r\nimport Lobby from './Lobby';\r\nimport Map from './Map';\r\n\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n          {/* A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route exact path='/' component={Main} />\r\n          <Route exact path='/:lobby_id' component={Lobby} />\r\n          <Route exact path='/:lobby_id/map' component={Map} />\r\n\r\n\r\n\r\n          {/* <Route exact path='/:subject/' component={Subject} />\r\n          <Route exact path='/:subject/topic/:topic' component={Topic} />\r\n          <Route exact path='/:subject/topic/:topic/question/:question' component={Question} /> */}\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}